• For this exercise you will need the Pandas package. You can import this using:
# import pandas as pd

Q1: Create a Pandas dataframe with 3 columns: User, Fruit and Quantity.
Insert Junaid, Tom, Dick, Harry as Users. 
Insert Apple, Oranges, Bananas, Mango as Fruit
Insert 4, 3, 11, 7 as Quantity
Each user should have their own row, this table should have 4 rows, you may name this dataframe what you like.

Q2: Read in the transactions CSV file into Python, call this df and print the first 5 rows

Q3: List the column names in the df dataframe. Express the answer as a list

Q4: Count the number of rows in the dataframe

Q5: How many unique customer ids do we have?

Q6: What is the minimum value, maximum value, mean value and median value for the price column

Q7: Filter the dataframe so that only the transactions for customer_id 'ABC' are returned. Call this ABC_df

Q8: Filter the dataframe so that only the transactions with quantity more than 10 are returned and occurred later than the 1st of January

Q9: How many rows are there in df where the price more than £10? Note: Pounds only, ignore the pence

Q10: Add a new column to df where you multiply price and quantity - call this revenue

Q11: Add a new column to df where you report the price in pounds only E.g. 12.05 becomes 12. Round up to the nearest pound - call this price_pounds. Hint: look up ceiling function

Q12: Create an indicator column where True marks if the quantity is a multiple of 2 and False otherwise - call this quantity_indicator Hint: Look at Numpy Select and or Lambda functions

Q13: Sort the dataframe df in ascending order according the price

Q14: Sort the dataframe df in ascending order according the price and descending order by date

Q15: Rename all the columns in the table where the first character of every column name has a capital letter as its first letter

Q16: Compute the total revenue by customer id and order this grouped table by descending revenue

Q17: For each day list the 2 top spending customer ids

Q18: What is the mean Quantity sold by day?

Q19: Write the df dataframe to a csv file called 'transactions_new.csv'